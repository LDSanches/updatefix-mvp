---
- name: Seleção de hosts e ajustes de inventarios
  hosts: "{{ updatefix_inventory_group_ok }}"
  vars_files:
    - vars/vars.yml
  gather_facts: True
  become: yes
  tasks:

    - name: Coletar fatos locais
      ansible.builtin.setup:
        filter: ansible_local

    - name: Convert 'top_processes' string to list
      set_fact:
        top_processes_list: "{{ ansible_local.proccess_status_check.localfacts.top_processes | from_yaml }}"

    - name: Convert 'top_non_root_processes' string to list
      set_fact:
        top_non_root_processes_list: "{{ ansible_local.proccess_status_check.localfacts.top_non_root_processes | from_yaml }}"


    - name: Definir ready_for_update baseado em verificações
      set_fact:
        ready_for_update: "FAIL"
      when: >
        ansible_local.root_space_check.localfacts.root_space_check == "FAIL" or
        ansible_local.boot_space_check.localfacts.boot_space_check == "FAIL" or
        ansible_local.root_readonly_check.localfacts.root_readonly_check == "FAIL" or
        ansible_local.boot_readonly_check.localfacts.boot_readonly_check == "FAIL" or
        ansible_local.subscription_check.localfacts.subscription_check == "FAIL" or
        ansible_local.repository_check.localfacts.repository_check == "FAIL" or
        ansible_local.rpm_check.localfacts.rpm_check == "FAIL" or
        ansible_local.zombie_process_check.localfacts.zombie_process_check == "FAIL" or
        ansible_local.uptime_reboot_check.localfacts.uptime_reboot_check == "FAIL" or
        ansible_local.mount_points_check.localfacts.mount_points_check == "FAIL"

    - name: Definir ready_for_update como OK se todas as verificações passarem
      set_fact:
        ready_for_update: "OK"
      when: ready_for_update is not defined


    - name: Gerar relatório de validação
      template:
        src: validacao.j2
        dest: /var/log/ansible/updatefix/updatefix_{{ updatefix_version }}/validacao.log
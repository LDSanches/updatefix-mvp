---
- name: Acessibilidade e Inventários
  hosts: localhost
  vars_files: vars/vars.yml
  gather_facts: False
  tasks: 
    - name: Verificar se os servidores previamente existe no Automation Controller no inventario principal
      ansible.controller.host:
        name: "{{ item }}"
        inventory: "{{ ac_inv_all_hosts }}"
        enabled: True
      loop: "{{ server_list.splitlines() }}"
      register: check_inventory_result
      check_mode: yes

    - name: Criar lista dos hosts existentes
      set_fact:
        server_existing: "{{ server_existing|default([]) + [item.item] }}"
      with_items: "{{ check_inventory_result.results }}"
      when: item.changed == False

    - name: Criar lista dos hosts não existentes
      set_fact:
        server_noexisting: "{{ server_noexisting|default([]) + [item.item] }}"
      with_items: "{{ check_inventory_result.results }}"
      when: item.changed == True

    - name: debug vars servidores existentes no inventory
      debug:
        var: server_existing

    - name: debug vars servidores não existentes inventory
      debug:
        var: server_noexisting

    - name: Add hosts existente no inventory de UPDATEFIX com variável OK
      ansible.controller.host:
        name: "{{ item }}"
        inventory: "{{ updatefix_inventory }}"
        enabled: True
        variables:
          host_exists_in_inventory: OK
          hosts_reachable: FAIL
      loop: "{{ server_existing }}"

    - name: Add hosts NÃO existente no inventory de UPDATEFIX com variável FAIL
      ansible.controller.host:
        name: "{{ item }}"
        inventory: "{{ updatefix_inventory }}"
        enabled: True
        variables:
          host_exists_in_inventory: FAIL
          hosts_reachable: FAIL
      loop: "{{ server_noexisting }}"
  
    - name: Criar grupo Updatefix versão {{ updatefix_version }} on inventory UPDATEFIX
      ansible.controller.group:
        name: "{{ item }}"
        inventory: "{{ updatefix_inventory }}"
        preserve_existing_hosts: True
        variables:
          updatefix_version: "{{ updatefix_version }}"
          updatefix_inventory: "{{ ac_inv_updatefix }}" 
          updatefix_inventory_group: "{{ updatefix_inventory }}_{{ updatefix_version }}"
          update_type: "{{ update_type }}"
          reboot: "{{ reboot }}"
      loop:
        - "{{ updatefix_inventory_group }}"
        - "{{ updatefix_inventory_group_ok }}"
        - "{{ updatefix_inventory_group_fail }}"

    - name: Add host no grupo Updatefix versão {{ updatefix_version }} no inventory UPDATEFIX
      ansible.controller.group:
        name: "{{ updatefix_inventory_group }}"
        inventory: "{{ updatefix_inventory }}"
        preserve_existing_hosts: True
        hosts: "{{ item }}"
      loop: "{{ server_list.splitlines() }}" 
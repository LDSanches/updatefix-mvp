---
- name: Verificações e Ações
  hosts: "{{ updatefix_inventory_group }}"
  vars_files: vars/vars.yml

  gather_facts: False
  tasks: 

#OBS: este teste de ping não é baseado no protocolo ICMP, este é o modulo ping do ansible que valida o acesso ao dispositivo
    - name: Verificar se os servidores existentes no inventario estão acessiveis para o Automation Controller
      ping:
      register: ping_result
      ignore_errors: True
      ignore_unreachable: true
      
    - name: Ajustar variável de status do host no inventory e group Updatefix  {{ updatefix_inventory_group }}
      ansible.controller.host:
        name: "{{ item }}"
        inventory: "{{ updatefix_inventory }}"
        enabled: true
        variables:
          host_exists_in_inventory: "{{ hostvars[item]['host_exists_in_inventory'] }}" #definida na ultima automação
          hosts_reachable: FAIL
      loop: "{{ groups[updatefix_inventory_group] }}"
      delegate_to: localhost
      run_once: true

    - name: Ajustar variável de status do host no inventory e group Updatefix {{ updatefix_inventory_group }} OK
      ansible.controller.host:
        name: "{{ inventory_hostname }}"
        inventory: "{{ updatefix_inventory }}"
        enabled: true
        variables:
          host_exists_in_inventory: "{{ host_exists_in_inventory }}"
          hosts_reachable: "OK"
      when: ping_result.ping is defined and ping_result.ping == "pong"
      delegate_to: localhost
      run_once: true

#    - name: Ajustar variável de status do host no inventory e group Updatefix  {{ updatefix_inventory_group }} 
#      ansible.controller.group:
#        name: "{{ updatefix_inventory_group_ok }}"
#        inventory: "{{ updatefix_inventory }}"
#        hosts: "{{ inventory_hostname }}"
#        preserve_existing_hosts: True
#      when: ping_result.ping is defined and ping_result.ping == "pong" 
#      delegate_to: localhost
#      run_once: true
    - name: List all hosts
      debug:
        msg: "{{ item.hosts[0] }}"
      loop: "{{ groups['updatefix_inventory_group'] }}"
      when:
        - hostvars[item]['host_exists_in_inventory'] == 'OK'
        - hostvars[item]['hosts_reachable'] == 'OK'

    - name: List all hosts
      debug:
        msg: "{{ hostvars[item].hostname }}"
      loop: "{{ groups['updatefix_inventory_group'] }}"
      when:
        - hostvars[item]['host_exists_in_inventory'] == 'OK'
        - hostvars[item]['hosts_reachable'] == 'OK'

    - name: Add hosts with status OK Updatefix version {{ updatefix_version }} to inventory UPDATEFIX
      ansible.builtin.group:
        name: "{{ updatefix_inventory_group_ok }}"
        preserve_existing_hosts: True
        inventory: "{{ updatefix_inventory }}"
        hosts: "{{ item.hosts }}"
      loop: "{{ groups[updatefix_inventory_group] }}"
      when:
        - hostvars[item]['host_exists_in_inventory'] == 'OK'
        - hostvars[item]['hosts_reachable'] == 'OK'
      delegate_to: localhost
      run_once: true
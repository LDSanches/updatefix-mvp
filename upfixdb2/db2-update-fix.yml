---
- name: DB2 Instance Update Fix
  hosts: all
  become: yes
  vars_files:
    - vars/vars.yml

  tasks:
    # Create a temporary directory
    - name: Create the temporary directory
      ansible.builtin.tempfile:
        state: directory
        suffix: unique_suffix
      register: temp_dir

    # Copy and umcompress DB2 Fix tar.gz file
    - name: Copy tar.gz file from a Remote Source to {{ machine_type }} and {{ os_sytem_type }} host
      ansible.builtin.copy:
        src: "{{ db2_source_path }}/{{ db2_fix_file }}"
        dest: "{{ temp_dir.path }}"
        mode: '0644'
      when: ansible_machine == "{{ machine_type }}" and
            ansible_system == "{{ os_sytem_type }}"
      
    - name: Uncompress tar.gz file of {{ machine_type }} and {{ os_sytem_type }}
      ansible.builtin.unarchive:
        src: "{{ temp_dir.path }}/{{ db2_fix_file }}"
        dest: "{{ temp_dir.path }}"
      when: ansible_machine == "{{ machine_type }}" and
            ansible_system == "{{ os_sytem_type }}"

    # DB2 Instanace Update
    - name: DB2 Instanace Update
      ansible.builtin.shell:
        cmd: "./db2_install -b {{ db2_path }} -p CLIENT -f NOTSAMP"
        chdir: "{{ temp_dir.path }}/temporal"

    # Remove the temporary directory
    - name: Remove the temporary directory
      ansible.builtin.file:
        path: "{{ hostvars['temp_dir'].path }}"
        state: absent
      when: hostvars['temp_dir'].path is defined

---
- name: Validação de serviços - UPFIX 3.9 -  services
  hosts: "{{ updatefix_inventory_group_ok }}"
  vars_files:
    - vars/vars.yml
  gather_facts: False
  become: yes
  tasks:

    - name: Inicializar variáveis
      set_fact:
        active_disabled_services: []

    - name: Inicializar variáveis
      set_fact:
        active_disabled_services: []

    - name: Coletar informações sobre os serviços
      ansible.builtin.service_facts:

    - name: Coletar serviços habilitados e em execução
      set_fact:
        active_enabled_services: "{{ active_enabled_services | default([]) + [item.key] }}"
      when: item.value.state == 'running' and item.value.status == 'enabled'
      with_dict: "{{ ansible_facts.services }}"

    - name: Coletar serviços em execução mas desabilitados
      set_fact:
        active_disabled_services: "{{ active_disabled_services | default([]) + [item.key] }}"
      when: item.value.state == 'running' and item.value.status == 'disabled'
      with_dict: "{{ ansible_facts.services }}"

    - name: Exibir lista de serviços habilitados e em execução
      debug:
        var: active_enabled_services

    - name: Exibir lista de serviços em execução mas desabilitados
      debug:
        var: active_disabled_services


    - name: Definir variável de 'WARNING'
      set_fact:
        active_disabled_services_status: "{{ 'OK' if active_disabled_services | length == 0 else 'WARNING' }}"

# Validação do serviço zabbix 

    - name: Definir variável com base no status do serviço zabbix-agent2
      set_fact:
        zabbix_service: "OK"
      when: >
        ('zabbix-agent2.service' in services) and
        (services['zabbix-agent2.service'].state == 'running') and
        (services['zabbix-agent2.service'].status == 'enabled')

# o mesmo processo pode ser utilizado para besclient, nsr e urbancode

    - name: Definir variável como FAIL se o serviço não estiver ativo ou enable
      set_fact:
        zabbix_service: "FAIL"
      when: zabbix_service is not defined

    - name: Criar arquivos de facts para services_status_check
      template:
        src: services_status_check.j2
        dest: "/etc/ansible/facts.d/services_status_check.fact"